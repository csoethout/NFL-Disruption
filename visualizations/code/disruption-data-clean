# Adding Variables of Importance for Disruption

# --- Setup: Combine Tracking Data ---
expanded_pbp_full <- pbp_full

combined_tracking_data <- bind_rows(
  tracking_w1_df, tracking_w2_df, tracking_w3_df, tracking_w4_df, 
  tracking_w5_df, tracking_w6_df, tracking_w7_df, tracking_w8_df, 
  tracking_w9_df
)

# --- Step 1: Add Directional Variables ---
combined_tracking_data <- combined_tracking_data %>%
  mutate(
    deltaxsign = if_else(dir <= 180, 1, -1),
    deltaysign = if_else(dir <= 90 | dir >= 270, 1, -1),
    dir_new = case_when(
      dir <= 90 ~ dir,
      dir <= 180 ~ 180 - dir,
      dir <= 270 ~ 270 - dir,
      TRUE ~ 360 - dir
    )
  )

# --- Step 2: Identify Motion Periods ---
motion_periods <- combined_tracking_data %>%
  filter(event %in% c("line_set", "ball_snap")) %>%
  group_by(gameId, playId, nflId) %>%
  summarize(
    line_set_frame = min(frameId[event == "line_set"]),
    ball_snap_frame = max(frameId[event == "ball_snap"]),
    .groups = "drop"
  )

# --- Step 3: Filter for Frames in Motion Period ---
motion_data <- combined_tracking_data %>%
  inner_join(motion_periods, by = c("gameId", "playId", "nflId")) %>%
  filter(frameId >= line_set_frame & frameId <= ball_snap_frame) %>%
  inner_join(expanded_pbp_full %>% select(gameId, playId, nflId, motionSinceLineset), 
             by = c("gameId", "playId", "nflId")) %>%
  filter(motionSinceLineset == TRUE, s > 0.62) %>%
  arrange(frameId) %>%
  mutate(
    motion_group = cumsum(lag(s <= 0.62, default = TRUE)),
    dir_change = abs(dir - lag(dir, default = dir[1])) %% 360,
    valid_dir_change = ifelse(dir_change > 180, 360 - dir_change, dir_change),
    consistent_direction = valid_dir_change <= 15
  ) %>%
  filter(consistent_direction)

# --- Step 4: Aggregate Motion Statistics ---
motion_stats <- motion_data %>%
  group_by(gameId, playId, nflId, motion_group) %>%
  summarize(
    motion_start_frameId = min(frameId),
    motion_end_frameId = max(frameId),
    avg_motion_speed = mean(s, na.rm = TRUE),
    max_motion_speed = max(s, na.rm = TRUE),
    avg_motion_accel = mean(a, na.rm = TRUE),
    max_motion_accel = max(a, na.rm = TRUE),
    motion_distance = sum(dis, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  group_by(gameId, playId, nflId) %>%
  summarize(
    motion_start_frameId = min(motion_start_frameId),
    motion_end_frameId = max(motion_end_frameId),
    avg_motion_speed = mean(avg_motion_speed, na.rm = TRUE),
    max_motion_speed = max(max_motion_speed, na.rm = TRUE),
    avg_motion_accel = mean(avg_motion_accel, na.rm = TRUE),
    max_motion_accel = max(max_motion_accel, na.rm = TRUE),
    motion_distance = sum(motion_distance, na.rm = TRUE),
    .groups = "drop"
  )

# --- Step 5: Merge with Expanded Play-by-Play Data ---
expanded_pbp_full <- expanded_pbp_full %>%
  left_join(motion_stats, by = c("gameId", "playId", "nflId")) %>%
  mutate(
    motion_time = ifelse(
      !is.na(motion_start_frameId) & !is.na(motion_end_frameId),
      (motion_end_frameId - motion_start_frameId) * 0.1,
      NA
    )
  )

# --- Adding Motion at Ball Snap ---
ball_snap_motion <- combined_tracking_data %>%
  filter(event == "ball_snap") %>%
  select(gameId, playId, nflId, frameId, s, a)

motion_snap_stats <- expanded_pbp_full %>%
  filter(inMotionAtBallSnap == TRUE) %>%
  inner_join(ball_snap_motion, by = c("gameId", "playId", "nflId")) %>%
  group_by(gameId, playId) %>%
  summarize(
    motion_speed_at_snap = mean(s, na.rm = TRUE),
    motion_accel_at_snap = mean(a, na.rm = TRUE),
    .groups = "drop"
  )

expanded_pbp_full <- expanded_pbp_full %>%
  left_join(motion_snap_stats, by = c("gameId", "playId"))

# --- Defensive Distance Analysis ---
defensive_positions <- c("ILB", "CB", "DT", "FS", "SS", "OLB", "DE", "NT", "MLB", "LB", "DB")

defensive_players <- expanded_pbp_full %>%
  filter(position %in% defensive_positions) %>%
  select(gameId, playId, nflId)

offensive_players <- expanded_pbp_full %>%
  filter(!position %in% defensive_positions) %>%
  select(gameId, playId, nflId)

post_snap_tracking <- combined_tracking_data %>%
  filter(event == "ball_snap") %>%
  group_by(gameId, playId, nflId) %>%
  summarize(
    ball_snap_frame = max(frameId[event == "ball_snap"]),
    .groups = "drop"
  ) %>%
  inner_join(combined_tracking_data, by = c("gameId", "playId", "nflId")) %>%
  filter(frameId > ball_snap_frame)

defensive_disruption <- post_snap_tracking %>%
  inner_join(defensive_players, by = c("gameId", "playId", "nflId")) %>%
  group_by(gameId, playId, nflId) %>%
  summarize(
    def_as_dis_traveled = sum(dis, na.rm = TRUE),
    .groups = "drop"
  )

offensive_disruption <- post_snap_tracking %>%
  inner_join(offensive_players, by = c("gameId", "playId", "nflId")) %>%
  group_by(gameId, playId, nflId) %>%
  summarize(
    off_as_dis_traveled = sum(dis, na.rm = TRUE),
    .groups = "drop"
  )

expanded_pbp_full <- expanded_pbp_full %>%
  left_join(defensive_disruption, by = c("gameId", "playId", "nflId")) %>%
  left_join(offensive_disruption, by = c("gameId", "playId", "nflId"))
